{
  "name": "fs-then",
  "version": "0.2.0",
  "description": "Promise aware wrapper for Node's fs module",
  "keywords": [
    "fs",
    "node-then",
    "promises",
    "when.js",
    "cujojs"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "maintainers": [
    {
      "name": "Scott Andrews",
      "email": "scothis@gmail.com",
      "url": "http://twitter.com/scothis"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/node-then/fs-then.git"
  },
  "dependencies": {
    "node-then": "~0.1"
  },
  "devDependencies": {
    "test-support": "~0.3",
    "when": "~2.2"
  },
  "main": "./lib/fs",
  "scripts": {
    "test": "buster test"
  },
  "readme": "fs Then\n=======\n\n[![Build Status](https://travis-ci.org/node-then/fs-then.png)](https://travis-ci.org/node-then/fs-then)\n\nThin wrapper arround Node's fs module that makes the async functions promise\naware. The wrapped methods return a promise the represents the value of the\nasync operation. Traditional callbacks still work, allowing for a transparent\ndrop-in for fs. Sync methods, classes and other helpers are not modified.\n\n\nExample\n-------\n\nTraditional Async\n\n```javascript\nvar fs = require('fs-then');\nfs.readFile('path to file', function (err, buffer) {\n   ...\n});\n```\n\nWith Promises\n\n```javascript\nvar fs = require('fs-then');\nfs.readFile('path to file').then(...);\n```\n\n\nWrapped methods\n---------------\n\n- appendFile\n- chmod\n- chown\n- close\n- exists\n- fchmod\n- fchown\n- fdatasync\n- fstat\n- fsync\n- ftruncate\n- futimes\n- lchmod\n- lchown\n- link\n- lstat\n- mkdir\n- open\n- read\n- readFile\n- readdir\n- readlink\n- realpath\n- rename\n- rmdir\n- stat\n- symlink\n- truncate\n- unlink\n- utimes\n- write\n- writeFile\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/node-then/fs-then/issues"
  },
  "_id": "fs-then@0.2.0",
  "dist": {
    "shasum": "01dc7fe27d90016e8c698b96e300eff61f936862"
  },
  "_from": "fs-then@",
  "_resolved": "https://registry.npmjs.org/fs-then/-/fs-then-0.2.0.tgz"
}
